ls
cd architect/
ls
bash later.sh
ls
sudo nvim /etc/makepkg.conf
ls
bash later.sh
ls
cd
sway
sudo pacman -S polkit-gnome
paru -S fuzzel-git
ls
cd
cd .config/
nvim sway/config
ls
sl
ls
nvim
ls
cd
ls
cd
ls
cat firefox.sh
bash firefox.sh
reboot
sway
nvim
nivm
nvim
vim
neovide
cd .config/
ls
neovide
sudo pacman -Rns nwg-look 
ls
sudo pacman -Q
font antialiasing linuxfont antialiasing linuxfont antialiasing linux
ls
rm firefox.sh
ls
la
cd go
ls
cd pkg/
ls
cd sumdb/
ls
cd
ls
sudo pacman -S go
ls
pwd preview
pwd 
psd preview
cd architect/
ls
cp dotfiles/user.js ~/.mozilla/firefox/0lukx3kz.default-nightly/
ls
cd
ls architect/dotfiles/
ls -a architect/dotfiles/
cd architect/dotfiles/config
ls
cd environment.d/
ls
cat env.conf
$XCURSOR_THEME
$env SDL_VIDEODRIVER
$envSDL_VIDEODRIVER
$env.SDL_VIDEODRIVER
$env
$env | rg dsl
$env | rg sdl
$env | rg SDL
$env | rg EDITOR
SDL_VIDEODRIVER=waylandSDL_VIDEODRIVER=waylandSDL_VIDEODRIVER=waylandSDL_VIDEODRIVER=waylandSDL_VIDEODRIVER=wayland
ls
cd
cd .config/
ls
cd environment.d/
ls
systemctl --user import-environment
cat env.conf
journalctl --user -xe
nvim env.conf
ls
nvim env.conf
ls
printenv
lls
cd .config/
ls
cd environment.d/
ls
cat env.conf
sudoedit /etc/environment
sudo nvim /etc/environment
sway
$env.SDL_VIDEODRIVER
$env SDL_VIDEODRIVER
$env.SDL_VIDEODRIVER
sudoedit /etc/environment
sway
nvim
neovidew
neovide
printenv
journalctl --user -xe
journalctl -p err -b
cd
ls
systemctl --status
systemctl
systemctl --failed
systemctl --user --failed
ls
nvim .config/sway/
cd
nvim ~/.config/gtk-3.0/settings.ini
nvim ~/.icons/default/index.theme
gsettings
cat ~/.config/gtk-3.0/settings.ini
gsettings
gsettings list-schemas
ls
rg curosr
rg curor
cat ~/.config/gtk-3.0/settings.ini
rg cursor
fd catppuccin-mocha-dark-cursors
fd catppuccin-mocha-dark-cursors /
cd /usr/share/icons/catppuccin-mocha-dark-cursors/
ls
cat ~/.config/gtk-3.0/settings.ini
ls
seat
d
cd
seat seat0 xcursor_theme Catppuccin-Mocha-Dark-Cursors
nvim .config/sway/config
sudo pacman -S discord
mkdir ~/.cache/starship<\n>starship init nu | save -f ~/.cache/starship/init.nu
cd .config/
nvim nushell/config.nu
ls
cd .config/
ls
cd nushell/
ls
zoxide init nushell | save -f ~/.cache/.zoxide.nu
ls
cd a
cd .cache/
ls
la
ls -a
cd l
nvim .zoxide.nu
cdi
cdi bat/
cd
ls
cdi architect/
cd architect/
cd
zi
cdi
sudo pacman -S vivid
vivid generate catppuccin-mocha > ~/.config/nushell/ls_colors.txt
cd .config/
ls
cd nushell/
ls
cat ls_colors.txt
ls
nvim config.nu
ls
la
ls
nvim
z nu
nvim config.nu
ls
cat nu
ls
sl
ls
eza
sudo pacman -Syu && prau -Syu
sudo pacman -Syu; prau -Syu
sudo pacman -Syu; paru -Syu
sudo pacman -S ttf-nerd-fonts-symbols-mono
sudo pacman -S go
poweroff
sudo pacman -Syu; paru -Syu
ls
cd .config/
ls
la
ls -a
nvim .gtkrc-2.0
cd .config/
ls
ls --all 
rm -rf zellij/
ls
rm -rf wezterm/
ls
rm -rf asm-lsp/
ls
cd nvim
ls
cd lua/plugins/
ls
mv asm.lua asm.lua.bak
ls
nvim hard.lua
ls
nvim
ls
cd
ls
cd
gsettings set org.gnome.desktop.interface cursor-theme 'catppuccin-mocha-dark-cursors'
gsettings set org.gnome.desktop.interface cursor-theme
gsettings set org.gnome.desktop.interface cursor-theme catppuccin-mocha-dark-cursors
nvim ~/.local/share/icons
sudo pacman -S lxappearance
sudo pacman -Rns lxappearance
nvim
ls
nvim ~/.local/share/icons/default/index.theme
sway
ls
nvim
vim
neovide
ls
cd nu
ls
cd .config/
cd fish
ls
cat config.fish
eza -a | egrep '^\.'
ls
rg
rg a
ls
date
date humanize 
la
time
date
date now
ls ...
ls
table
table --list 
ls
nvim alias.nu
ls
cd ..
cd kitty/
nvim kitty.conf
ls
nvim
ls
sudo pacman -Syu; paru -Syu
sudo pacman -Sc
ls
sls
ls
nvim
nivm
nvim
cd /etc/
ls
cat tlp.conf.pacnew
cd /etc/
sudoedit /etc/environment
cd nu
nvim alias.nu
cd
cd /etc/
ls
se tlp.conf
cd nu
ls
nvim alias.nu
nvim config.nu
cd /etc/
ls
lscpu
cat tlp.conf.pacnew | wl-copy 
tlp stat
tlp-stat
sudo tlp-stat
sudo pacman -S smartmontools
sudo tlp-stat
tlp-stat -g
sudo tlp-stat -g
sudo pacman -S x86_energy_perf_policy
nvim architect/packages.json
x86_energy_perf_policy
sudo x86_energy_perf_policy
sudo x86_energy_perf_policy --help
sudo x86_energy_perf_policy --epb 
se tlp.conf
sudo pacman -Syu; paru -Syu
cd
sudo cp -r /etc/tlp.conf ~/architect/dotfiles/etc/
cd /etc/tlp.d/
ls
nvim 00-template.conf
ls
cd
ls
cd /e
ls
whoami
getent group
sudo usermod -a -G power,git,network,video,input,systemd-journal,seat wasd
ls
groups wasd
cd
paru -S greetd-git
systemctl enable greetd.service
sudoedit /etc/greetd/config.toml
ls
se /etc/pam.d/greetd
paru -S  greetd-tuigreet-git 
se /etc/greetd/config.toml
ls
cd
ls
se /etc/greetd/config.toml
reboot
ls
sway
l
sls
ls
se /etc/greetd/config.toml
ls
se /etc/greetd/config.toml
reboot
ls
ps
btop
paru -Rns greetd-tuigreet-git
cd /etc/systemd/system/getty@tty1.service.d/
ls
cd /etc/systemd/system/
ls
cd getty.target.wants/
ls
nvim getty@tty1.service
ls
ll
se getty@tty1.service
se /usr/lib/systemd/system/getty@.service
cd
$env.TERM
sway
nvim
sudo cp -r /etc/greetd ~/architect/dotfiles/etc/
ls
cd .config/
cd fish
ls
rm fish_plugins
ls
rm -rf functions/
ls
cd conf.d/
ls
fish
cd
cd .config/
cd fish
ls
cd conf.d/
ls
cd ..
rm -rf conf.d/
ls
nvim architect/packages.json
kitty -
kitty -help
kitty --help
sudo pacman -Syu; paru -Syu
glxinfo | grep "direct rendering"
sudo pacman -S adriconf
cd /boot/
ls
cd loader/
ls
cd entries/
ls
se 2024-08-17_04-50-27_linux-fallback.conf
cd
sudo pacman -Syu; paru -Syu
nvmi
nvim
ls
nvim
nvin
nvim
nivm
nvim
niv
ls
s
lls
ls
cd sway
ls
fd sway
fd --hidden sway
nvim .config/sway/config
l
ls
cd fd -H sway
ls
cd .config/
ls
cd sway
ls
nvim catppuccin-mocha
ncim
nvim
vim
cd
ls
cd
ls
cd architect/
ls
cd scripts/
ls
cd gotta-go-fast/
ls
nvim gotta-go-fast.py
ls
cd c
l;s
ls
nvim justfile
cd ..
ls
cd ..
ls
bash create_symlinks.sh
cat ssh.sh
ls
mkdir .scripts
ls
nvim create_symlinks.sh
ls
cat create_symlinks.sh
cp gotta-go-fast/ ~/.scripts/
cp -r gotta-go-fast/ ~/.scripts/
ls
bash create_symlinks.sh
cd
ls
cd .scripts/
ls
ll
cd ..
cd /usr/local/
ls
cd
cd scr
ls
cat create_symlinks.sh
cd /usr/local/bin
ls
cd
ls
cd architect/
sl
ls
cd scripts/
ls
bash create_symlinks.sh
sudo bash create_symlinks.sh
ls
cat create_symlinks.sh
ls
la
ls -a
cd .scripts/
ls
cd gotta-go-fast/
ls
chmod +x gotta-go-fast.py
ls
bash create_symlinks.sh
sudo bash create_symlinks.sh
gotta-go-fast.py 
gotta-go-fast.py c c
ls
cd c
ls
cd src/
ls
cd ..
ls
just
paru -Syu just
paru -Syu just-git
sudo pacman -S just
sudo pacman -Syu && prau -Syu
sudo pacman -Syu; paru -Syu
ls
just
paru -S neovim-git
nvim --version
paru -S neovim-git
sudo pacman -Syu; paru -Syu
nvim
nivm
nvim
nivm
ls
nvim
cd
ls
rm -rf c
ls
cd go
sl
ls
cd pkg/
ls
cd mod/l
ls
cd mod/
sl
ls
cd
ls
rm -rf go/
ls
paru -S walker-git
paru -S walker
ls
ls -a
cd
ls
nvim .config/nushell/env.nu
walker 
walker --help
sudo pacman -S libgirepository
sudo pacman -S meson ninja
ls
walker
walker --modules applications,ssh
walker
walker --modules applications,Webseatch
ls
paru -Rns walker
ls
rm -rf .go/
ll
ls
rm -rf .go
sudo rm -rf .go
ls
ll
ls
cd dev/
ls
eza
ls
cd 
cd .config/nu
ls
ll
nvim config.nu
ls
cd dev/
gotta-go-fast.py memory_leaker c
gotta-go-fast.py c memory_leaker --git
cd memory_leaker/
ls
cd src/
ls
..
ls
cd .config/
ls
nvim starship.toml
ls
cd
ls
cd dev/
ls
cd memory_leaker/
ls
..
ls
just
la
ls -a
just
vnim
vim
cd .config/
ls
cd
cd .config/
ls
nvim neovide/config.toml
ls
cd go
ls
..
ls
rm -rf go/
ls
rm -rf walker/
ls
rm -rf Electron/
ls
cd sway/
ls
vim
neovide
nvim config
cd
cd mem
vim
paru -S xremap-wlroots-bin
echo 'KERNEL=="uinput", GROUP="input", TAG+="uaccess"' | sudo tee /etc/udev/rules.d/input.rules
sudo gpasswd -a wasd input
lsmod | grep uinput
sudo modprobe uinput
lsmod | grep uinput
echo 'KERNEL=="uinput", GROUP="input", TAG+="uaccess"' | sudo tee /etc/udev/rules.d/99-input.rules
lsmod | grep uinput
/etc/modules-load.d/uinput.conf
se /etc/modules-load.d/uinput.conf
se /etc/udev/rules.d/99-input.rules
ls
cd .config/
ls
cd xremap/
ls
xremap config.yml
ls
sudo xremap config.yml
ls
cd .config/
ls
cd xremap/
RUST_LOG=debug xremap config.yml &
paru -S pueue-git
sudo pacman -S pune
paru -S pueue
systemctl --user enable pueued
pueue 
cd ..
cd nushell
ls
nvim env.nu
ls
nvim task.nu
nvim config.nu
ls
task
task status
pueue 
btop
task spawn vim
task spawn neovide
task spawn 
task spawn --gelp
task spawn --help 
task spawn --immediate vim
task spawn --immediate neovide
task spawn <neovide>
task spawn
task spawn ls
task spawn { ls }
ls
task spawn { neovide }
vim
task spawn { neovide }
task status 
task status 1
task log
task kill --all 
btop
task spawn {vim}
btop
task status 1
task status 
task log
task status
task clean 
task status
ls
cd un
cd nu
ls
task spawn { neovide }
vim
nvim alias.nu
ls
cd .config/
ls
cd xremap/
task spawn { xremap config.yml}
ls
nvmi config.yml
nvim config.yml
ls
task kill --all 
task spawn { xremap config.yml}
ls
nvim config.yml
nvim
ls
nvim config.yml
ls
cd .config/
ls
nvim sway/config
lsw
sway
ls
bto
btop
task kill --all 
swat
cd .config/
nvim sway/config
pueue status
pueue log
pueue start nvim
pune start
pueue start
ls
sway
ls
sl
ls
vim
sudo pacman -Syu && prau -Syu
sudo pacman -Syul prau -Syu
sudo pacman -Syu; prau -Syu
sudo pacman -Syu; paru  -Syu
ls
pueue
pueue add nvim
pueue start
ls
btop
ls
pueue
pueue kill
pueue
pueue add sleep 10
pueue start
pueue log
pueue start
pueue 
ls
pueue add xremap /home/wasd/.config/xremap/config.yml
pueue clean
pueue
pueue start
pueue
pueue add xremap /home/wasd/.config/xremap/config.yml
ls
pueue clean
ls
sway
ls
cd .config/
ls
cp -r nushell/ xremap/ nvim/ ~/architect/dotfiles/config/
ls
cd
ls
cd architect/
ls
l
ls
pacman -Qb
pacman -Q
pacman -Q | pol
pacman -Q | rg pol
nvim packages.json
ls
sudo pacman -S clang
file clang
file $(which clang)
file $env.(which clang)
file (which clang).path
file (which clang) .path
file (which clang).path
file (which nvim).path
file (... which nvim).path
stat (which git).path
stat (which git)
stat (...which git)
stat (... which git)
ls
which clang
ls
which clang
file clang
type clang
describe clang
type -a clang
sudo pacman -S type
which clang
which -a clang
which -h  clang
which --all   clang
file (... which nvim).path
file (which nvim).path
file which nvim.path
file (which nvim).path
which clang
file /usr/bin/clang
file (which clang-18).path
file /usr/bin/clang-18
readelf .comment /usr/bin/clang-18
readelf -a .comment /usr/bin/clang-18
readelf .note.gnu.property /usr/bin/clang-18
readelf --section-headers .note.gnu.property /usr/bin/clang-18
readelf -A .note.gnu.property /usr/bin/clang-18
readelf -A /usr/bin/clang-18
readelf -a
readelf -a .note.gnu.property /usr/bin/clang-18
readelf -a .note.gnu.property /usr/bin/sway
lls
cd
ls
btop
cd /tmp
ls
fd -H .
cd ..
df -H /tmp/
ls
cd
s
ls
nvim
ee
cd architect/
cat architect/
cat architect.sh
sudo pacman -Rns $(pacman -Qtdq)
sudo pacman -Rns (pacman -Qtdq)
pacman -Qtdq
sudo pacman -Rns libvterm
sudo pacman -Rns tree-sitter-c<\n>tree-sitter-lua<\n>tree-sitter-markdown<\n>tree-sitter-query<\n>tree-sitter-vim<\n>tree-sitter-vimdoc
ls
cd .cache/
ls
rm -rf event-sound-cache.tdb.14b10facdd2546339c388d37c555a4e0.x86_64-pc-linux-gnu pip walker matplotlib/ go-build/
cd
ls
nvim
ls
sudo pacman -Syu; paru  -Syu
nvim
ls
cd architect/
ls
cd architect/
cd ..
cd scripts/
ls
nvim create_symlinks.sh
ls
cd
ls
lcd
ls
cd architect/
ls
nvim architect.sh
ls
nvim packages.json
ls
sudo pacman -S uv
uv
ls
uv venv
ls
la
rm .config.old
ls
mv .config dotfiles/
ls
la
source .venv/bin/activate
cat .venv/bin/activate
ls
la
ls
uv venv
.venv/bin/activate.nu
overlay use .venv/bin/activate.nu
ls
pytnon
python
python
ls
la
ruff
unuv pip install ruff
uv pip install ruff
ruff
ruff check .
nvim pyproject.toml
ls
ruff check .
ls
cd architect/
ls
nvim main.py
ls
..
ls
cd scripts/
ls
nvim gotta-go-fast.py
nvim gotta-go-fast/gotta-go-fast.py
chmod +x gotta-go-fast.py
ls
chmod +x  gotta-go-fast/gotta-go-fast.py
ls
cd gotta-go-fast/
ls
nvim gotta-go-fast/gotta-go-fast.py
ls
nvim gotta-go-fast.py
ls
./gotta-go-fast.py c c
ls
nvim gotta-go-fast.py
uv pip install types-html5lib types-requests
ls
./gotta-go-fast.py c c
ls
nvim gotta-go-fast.py
./gotta-go-fast.py c c
ls
./gotta-go-fast.py c zxc
ls
./gotta-go-fast.py zxc zxc
pyton architect/scripts/gotta-go-fast/gotta-go-fast.py 
pyhton architect/scripts/gotta-go-fast/gotta-go-fast.py 
python architect/scripts/gotta-go-fast/gotta-go-fast.py 
python architect/scripts/gotta-go-fast/gotta-go-fast.py c c
ls
python architect/scripts/gotta-go-fast/gotta-go-fast.py c c
ls
rm -rf c
ls
python architect/scripts/gotta-go-fast/gotta-go-fast.py c c
rm -rf c
python architect/scripts/gotta-go-fast/gotta-go-fast.py c c
rm -rf c
ls
python architect/scripts/gotta-go-fast/gotta-go-fast.py c c
ls
cd c
ls
cd
ls
python architect/scripts/gotta-go-fast/gotta-go-fast.py c c
rm -rf c
ls
python architect/scripts/gotta-go-fast/gotta-go-fast.py c c
ls
cd c
ls
cd
ls
rm -rf c
ls
nvim gotta-go-fast.py
ls
cp -r gotta-go-fast.py ~/.scripts/gotta-go-fast/
nvim .scripts/gotta-go-fast/gotta-go-fast.py
ls
cd
ls
ls
..
s
ls
cat create_symlinks.sh
cd /usr/local/bin
ls
cat gotta-go-fast.py
cd
ls
gotta-go-fast.py c memory_leaker --git
ls
rm -rf memory_leaker/
ls
cd
ls
cd
ls
nvim .config/starship.toml
ls
cd architect/
ls
overlay use .venv/bin/activate.nu
cd
ls
cd architect/
ls
cd architect/
git status
ls
cd
sl
ls
sudo pacman -S sysbench
sysbench cpu --cpu-max-prime=2000 run
cd
ls
sudo pacman -Syu; paru  -Syu
ls
nvim
ls
cd architect/
ls
cd architect/
ls
nvim systemd_manager.py
ls
vim modify_files.py
ls
nvim manage_directories.py
ls
nvim main.py
python main.py
..
py architect/main.py
sudo pacman -Rns nwg-look 
ls
git add .
git status
ls
cd dotfiles/
ls
cd config/
ls
rm -rf nvim/
sl
..
git add .
git status
git commit -m ":^"
git push
ls
sudo pacman -Syu; paru  -Syu
reboot
ls
sway
ls
cd /etc/greetd/
ls
sudoedit config.toml
sudo pacman -Syu; paru  -Syu
ls
nvim
ls
cd architect/
ls
cd architect/
ls
vim
ls
cd .config/fish
ls
nvim config.fish
ls
cd
ls
cd .config/
ls
rm -rf fish/
ls
cd
cd architect/
ls
cd architect/
ls
..
ls
cd dotfiles/
ls
rm -rf config/fish/
ls
cd config/
ls
rm -rf zellij/ asm-lsp/ 
ls
..
ls
cd home
la
...
ls
ls
cd
ls
cd architect/
ls
vim
cd config/
ls
cd 
cd config
ls
cd hypr/
sl
ls
cd scripts/
ls
cat portal
cat portal.sh
ls
..
ls
rm -rf scripts/ walls/
ls
...
ls
cd architect/
ls
vim
ls
vim
sudo pacman -S qemu-desktop
sudo pacman -S libvirt
grep -E '(vmx|svm)' /proc/cpuinfo
sudo pacman -Syu qemu virt-manager virt-viewer dnsmasq vde2 bridge-utils openbsd-netcat
sudo systemctl enable libvirtd
sudo usermod -a -G libvirt $(whoami)<\n>sudo usermod -a -G kvm $(whoami)<\n>
sudo usermod -a -G libvirt (whoami)<\n>sudo usermod -a -G kvm (whoami)<\n>
sudo usermod -a -G libvirt (whoami)<\n>sudo usermod -a -G kvm wasd
sudo usermod -a -G libvirt<\n>sudo usermod -a -G kvm wasd
sudo usermod -a -G libvirt wasd<\n>sudo usermod -a -G kvm wasd
lsmod | grep kvm
sync
ls
cd architect/
pacman -Q
ls
vim packages.json
sudo pacman -S ttf-nerd-fonts-symbols-mono
sudo pacman -S expac
expac --timefmt='%Y-%m-%d %H:%M:%S' '%l\t%n' | sort -n
expac --timefmt='%Y-%m-%d %H:%M:%S' '%l\t%n' | sort -nr
expac --timefmt='%Y-%m-%d %H:%M:%S' '%l\t%n' | sort -n
expac --timefmt='%Y-%m-%d %H:%M:%S' '%l\t%n' | sort -nr
grep '\[ALPM\] installed' /var/log/pacman.log | awk '{print $1 " " $2 " " $4}' | sort
pacman -Q
grep '\[ALPM\] installed' /var/log/pacman.log | awk '{ print substr($1, 2, length($1)-2) " " substr($2, 1, length($2)-1) " " $4 }' | while read date time pkg; do printf "%d %s\n" "$(date -d "$date $time" +%s)" "$pkg"; done | sort -n | awk '{print $2}'
grep '\[ALPM\] installed' /var/log/pacman.log | awk '{ print substr($1, 2, length($1)-2) " " substr($2, 1, length($2)-1) " " $4 }' | while read date time pkg; do printf "%d %s\n" "$(date -d "$date $time" +%s)" "$pkg"; done | sort -n | awk '{print $2}'<\n>
bash
pacman -Q
ls
nvim later.sh
ls
nvim packages.json
ls
which nu
chsh -s /usr/bin/nu
ls
ssh wasd@192.168.122.227
ssh-copy-id  wasd@192.168.122.227
<\n>ERROR: Offending RSA key in /home/wasd/.ssh/known_
ssh-keygen -f /home/wasd/.ssh/known_hosts -R 192.168.122.227
ssh-copy-id wasd@192.168.122.227
ssh wasd@192.168.122.227
ls
kitten ssh wasd@192.168.122.227
ls
nvim architect.sh
ls
cd architect/
ls
cd architect/
cat later.sh
cat architect.sh
pacman -Q
pacman -Qk
pacman -Qe
pacman -Qe | rg psd
pacman -Qe | rg power
pacman -Qe | rg profile
pacman -Qe | rg pue
pacman tlp
pacman -Q | rg scx
pacman -Qeq
cd architect/architect/
ls
py systemd_manager.py
ls
py systemd_manager.py
pacman -Qeq
pacman -Qe
pacman -Qq
py systemd_manager.py
cd architect/architect/
vim systemd_manager.py
systemctl status --all
systemctl is-active
systemctl is-active psd
systemctl is-active scx
systemctl is-active psd
systemctl --user is-active psd
ls
cd architect/architect/
py systemd_manager.py
ls
cd architect/architect/
py systemd_manager.py
ls
py systemd_manager.py
ls
py systemd_manager.py
ls
..
sl
ls
cd architect/
ls
py systemd_manager.py
ls
py systemd_manager.py
ls
cat debug.log
py systemd_manager.py && cat debug.log
py systemd_manager.py; cat debug.log
nvim systemd_manager.py
poweroff
sl
ls
cd architect/
vim
py architect/systemd_manager.py
ls
py architect/systemd_manager.py; cat debug.log
systemctl is-active sshd
systemctl disable sshd.service
systemctl is-active sshd
py architect/systemd_manager.py; cat debug.log
sudo pacman -Qqqqq
py architect/systemd_manager.py; cat debug.log
systemctl disable sshd.service
py architect/systemd_manager.py; cat debug.log
ls architect/
nvim .gitignore
ls
ls architect/
nvim architect/main.py
py architect/main.py
ls
vim
py architect/main.py
sudo pacman -Syu; paru  -Syu
ls
py architect/main.py
paru -Syu
py architect/main.py
ls
cat install_packages.log
rm debug.log
ls
cd architect/
ls
nvim systemd_manager.py
ls
nvim systemd_manager.py
ls
nvim modify_files.py
ls
nvim manage_directories.py
ls
py manage_directories.py
ls
mkdir Desktop
py manage_directories.py
ls
ls
cat directory_management.log
ls
nvim manage_directories.py
ls
..
ls
nvim architect.sh
ls
cd
ls
sudo pacman -Syu; paru  -Syu
paru -Syu; sudo pacman -Syu
se /etc/pacman.conf
sudo pacman -Syu; paru  -Syu
nvim
ls
cd architect/
ls
cd architect/
ls
mv main.py install_packages.py
ls
..
ls
cd wallpapers/
ls
..
ls
tree
ls -tree
ls
tree
ls
sudo pacman -S tree
tree
ls
cd architect/
ls
nvim install_packages.py
vim install_packages.py
py architect/install_packages.log
cd architect/
ls
cd architect/
ls
mv systemd_manager.py service_manager.py
cd
py architect/install_packages.py
ls
py architect/architect/install_packages.py
cd architect/
nvim packages.json
ls
paru -c
paru -L
sudo pacman -D
sudo pacman -Syu
sudo pacman -Syu --ignore uv 
sudo pacman -Syu
ls
sudo pacman -Rns helix-git
paru -Syu helix-git
sudo pacman -S helix
cd architect/
ls
cd architect/
ls
hx install_packages.py
hx
helix
helix install_packages.py
sudo pacman -Syu
se /etc/pacman.conf
cd architect/
ls
vim
ls
cd /boot/loader/entries/
ls
sudo cp 2024-08-17_04-50-27_linux 00.conf
ls
sudo cp 2024-08-17_04-50-27_linux.conf 00.conf
ls
cat 00.conf
py ~/architect/architect/modify_files.py
sudo py ~/architect/architect/modify_files.py
sudo python ~/architect/architect/modify_files.py
ls
cat install_packages.log
ls
se 2024-08-17_04-50-27_linux.conf
ls
sudo 00.conf 33.conf
sudo cp 00.conf 33.conf
ls
rm -rf 00.conf
ls
sudo rm 00.conf
ls
sudo python ~/architect/architect/modify_files.py
ls
cat install_packages.log
sudo nvim 2024-08-17_04-50-27_linux.conf
ls
cd /boot/loader/entries/
ls
cat install_packages.log
ls
rm -rf 4ls
ls
cat 2024-08-17_04-50-27_linux.conf
sudo python ~/architect/architect/modify_files.py
cat 2024-08-17_04-50-27_linux.conf
sudo nvim 2024-08-17_04-50-27_linux.conf
se 2024-08-17_04-50-27_linux.conf
ls
cd
ls
rm install_packages.log
ls
cd architect/
paru -Syu; sudo pacman -Syu
ls
cd architect/
ls
nvim modify_files.py
ls
sudo python service_manager.py
pyu service_manager.py
py service_manager.py
ls
nvim service_manager.py
ls
..
ls
pyton architect/service_manager.py
python  architect/service_manager.py
ls
rm service_manager.log install_packages.log
ls
vim
python  architect/service_manager.py
ls
mkdir log
ls
python  architect/service_manager.py
ls
rm -rf log/
python  architect/service_manager.py
mkdir log
python  architect/service_manager.py
ls
cat log/
ls
cd log/
ls
cat service_manager.log
..
ls
cd architect/
ls
rm *.log
ls
..
ls
cd architect/
ls
cat install_packages.py
cat modify_files.py
ls
vimls
cd __pycache__/
ls
..
ls
..
ls
sudo sysctl
sudo sysctl -a
sudo sysctl -a | rg miti
sysbench cpu --cpu-max-prime=2000 run
sudo sysctl kernel.split_lock_mitigate=0
sysbench cpu --cpu-max-prime=2000 run
sudo ksmctl --enable
sudo pacman -S ksmctl
cd /etc
ls
cd tmpfiles.d/
ls
sudo nvim thp.conf
ls
nvim optimize-interruptfreq.conf
se optimize-interruptfreq.conf
ls
..
ls
sudo cp -r tmpfiles.d/ ~/architect/dotfiles/etc/ 
cd ~/architect/dotfiles/etc/
ls
cd
cd /etc
ls
cd
ls
cd
s
ls
cd /etc/
ls
cd sysctl.d/
ls
cat 99-custom.conf
ls
cd
ls
nvim packages.json
poweroff
paru -Syu; sudo pacman -Syu
cd architect/
ls
cat architect.sh
groups wasd
cd /var/lib/iwd/Magenta
ls
groups wasd
getent group
sudo usermod -aG sudo,video,audio,network,sys,git,wheel,seat,input wasd<\n>
se /etc/sudoers
nvim architect.sh
sway
paru -Syu; sudo pacman -Syu
ls
id
se /etc/sudoers
ls
cd /etc/
ls
cd sudoers.d/
ls
cd sudoers.d/
sudo -r 
sway
paru -Syu; sudo pacman -Syu
ls
cd architect/
lsc
ls
cd dotfiles/
ls
sudo cp -r /etc/tlp.conf ~/architect/dotfiles/etc/
cd etc/
ls
cd greetd/
ls
cat config.toml
echo $env.XDG_SESSION_TYPE
echo $env.XDG_SESSION_TYPE $env.XDG_SESSION_TYPE
echo $env.XDG_SESSION_TYPE $env.XDG_SEAT
echo $env.XDG_SESSION_TYPE $env.env.XDG_SESSION_TYPE
echo $env.XDG_SESSION_TYPE $env.MOZ_ENABLE_WAYLAND
lls
ls
cd
ls
cd architect/
ls
nvim
nivm
nvim
ls
cd scripts/
ls
/usr/local/bin/
ls
cd
nvim create_symlinks.sh
ls
bash create_symlinks.sh
nvim create_symlinks.sh
ls
..
ls
cd architect/
ls
nvim create_symlinks.py
ls
vnim create_symlinks.py
vim
ls
py create_symlinks.py
ls
nvim create_symlinks.py
py create_symlinks.py
sudo python create_symlinks.py
ls
cd .scripts/
ls
ll
cd /usr/local/bin
ls
rm gotta-go-fast.py
sudo rm gotta-go-fast.py
ls
cd
cd architect/
ls
cd architect/
nvim create_symlinks.py
ls
py create_symlinks.py
sudo python create_symlinks.py
ls
cd /usr/local/bin
ls
nvim create_symlinks.py
ls
p
py create_symlinks.py
cd .scripts/
ls
cd gotta-go-fast/
ls
..
ls
sudo python create_symlinks.py
ls
cd /usr/local/bin
ls
cd
cd .scripts/
ls
cd gotta-go-fast/
ls
ll
./gotta-go-fast.py
ls
cd .scripts/
ls
cd gotta-go-fast/
ls
./gotta-go-fast.py zxc zxc
./gotta-go-fast.py zxc c
ls
./gotta-go-fast.py c c
ls
./gotta-go-fast.py c c
ls
pwd
ls
./gotta-go-fast.py c c
ls
chmod +x gotta-go-fast.py
./gotta-go-fast.py c c
ls
./gotta-go-fast.py c py
ls
cd py
ls
..
ls
rm -rf py/
ls
nvim gotta-go-fast.py
ls
..
ls
cp -r gotta-go-fast/ ~/architect/scripts/
cd
ls
cd architect/
git status
ls
cd scripts/
ls
..
cd architect/
ls
cd .scripts/
ls
cd gotta-go-fast/
ls
cp gotta-go-fast.py ../
ls
cd ..
ls
rm -rf gotta-go-fast/
ls
./gotta-go-fast.py c py
ls
cd
ls
cd architect/
ls
cd scripts/
ls
cd gotta-go-fast/
ls
mv c ../../
ls
..
ls
..
ls
mkdir templates
ls
mv c templates/
ls
cd .config/kitty/
ls
nvim kitty.conf
nvim gotta-go-fast.py
ls
cd architect/
ls
nvim create_symlinks.py
ls
py create_symlinks.py
sudo python create_symlinks.py
cd /usr/local/bin
ls
..
cd
ls
cd .scripts/
ls
cd
cd architect/
ls
sudo python create_symlinks.py
nvim create_symlinks.py
ls
sudo python create_symlinks.py
gotta-go-fast.py 
ls
py create_symlinks.py
cat create_symlinks.sh | wl-copy 
cat create_symlinks.py| wl-copy 
vim
py create_symlinks.py
ls
py create_symlinks.py
ls
cd .config/
ls
cd
cd .scripts/
ls
rm ssh.sh create_symlinks.sh
ls
..
ls
cd architect/
ls
cd
cd architect/
ls
cd architect/
ls
rg LOGGING
rg DEBUG
rg .log
rg ".log"
cat create_symlinks.py
rg filename=
vim
ls
py create_symlinks.py
ls
cat create_symlinks.log
rm create_symlinks.log
ls
nvim create_symlinks.py
ls
cd /
cd
cd /usr/local/bin
ls
sudo rm gotta-go-fast.py
ls
py create_symlinks.py
ls
cat ../log/create_symlinks.log
ls
sudo python create_symlinks.py
cat ../log/create_symlinks.log
cd
ls
cat create_symlinks.py | wl-copy 
ls
..
ls
cat architect.sh
sudo usermod -aG sudo,video,audio,network,sys,git,wheel,seat,input wasd
sudo usermod -aG video,audio,network,sys,git,wheel,seat,input wasd
ls
groups wasd
ls
cat architect.sh
ls
curl https://mirror.cachyos.org/cachyos-repo.tar.xz -o cachyos-repo.tar.xz
tar xvf cachyos-repo.tar.xz && cd cachyos-repo
tar xvf cachyos-repo.tar.xz; cd cachyos-repo
ls
sudo ./cachyos-repo.sh
cat /etc/pacman.conf
ls
cat /etc/pacman.d/
cat /etc/pacman.d/cachyos-v4-mirrorlist
ls
sudo pacman -S cachyos-rate-mirrors
cachyos-rate-mirrors 
sudo cachyos-rate-mirrors 
ls
cat cachyos-repo.sh
ls
nvim cachyos-repo.sh
ls
sudo ./cachyos-repo.sh
ls
nvim cachyos-repo.sh
cat /etc/pacman.d/cachyos-mirrorlist
cd /etc/
ls
cd pacman.d/
ls
nvim architect.sh
cat cachyos-v4-mirrorlist
ls
cd architect/
ls
cd ..
s
ls
cd architect/
ls
cd
cd
ls
rm -rf cachyos-repo/ cachyos-repo.tar.xz
ls
cd architect/
ls
nvim .gitignore
git status
ls
nvim packages.json
ls
ls -a
ll
cd scripts/
ls
cat ssh.sh
chmod 700 ~/.ssh
ll
ls
cd architect/
cd scripts/
ls
bash ssh.sh
ls
cd misc/
ls
cd misc/
ls
cd books/
ls
..
ls
rm post.sh firefox.sh
ls
bash ssh.sh
la
ls -a
ls
cd usb
ls
..
ls
ls
cd /mnt/
ls
cd usb/
ls
sudo mount /dev/sda1 /mnt/usb/
ls
cd usb/
ls
..
ls
rm -rf usb/
ls
la
d
cd
ls
la
mv .ssh/ .ssh.bak
la
cd
ls
sudo umount /mnt/usb
ls
lsblk
cd architect/
ls
cd scripts/
ls
bash ssh.sh
la
cd .ssh
ls
ll
..
ls
..
ls
cd wasd/
ls
ls
rm create_symlinks.sh
ls
qla
la
lss
ls
date
date now
ls
nvim ssh.sh
..
vim
cd misc/
ls
cat post
ls
cat post.sh
ls
nvim firefox.sh
ls
cat post.sh
ls
sudo mount /dev/sda1 /mnt/usb/
ls
cd /mnt/usb/
ls
rm post.sh firefox.sh
ls
cp ~/misc/firefox.sh .
ls
la
ls
ls
cd /etc/
ls
..
cd home
ls
cd
ls
cd architect/
cd dotfiles/
ls
cd home
ls
la
ls
la
ls
..
ls
cd config
ls
cd .config/
ls
cd architect/
ls
pyton later.sh
ls
cd architect/
ls
nvim later.sh
ls
bash later.sh
ls
cd..
cd ..
cd .config/
cd nu
ls
cd nushell/
ls
nvim env.nu
cd architect/
ls
..
ls
cd
cd architect/
cat later.sh
starship init nu | save -f ~/.cache/starship/init.nu<\n>
zoxide init nushell | save -f ~/.cache/.zoxide.nu<\n>
cd
ls
cd .config/
ls
cd nushell/
ls
nvim config.nu
ls
nvim
vim
sudo pacman -S neovide
vim
nvim
cd /etc/
nvim tlp.conf
sudoedit tlp.conf
sudo nvim tlp.conf
cat tlp.conf
ls
cd .config/
ls
cd 
cd .config/
ls
cat environment.d/env.conf
sudo nvim /etc/environment
ls
cd
cd architect/dotfiles/
ls
cd
cd dot
nvim .cache/.zoxide.nu
cd dot
ls
cp user.js ~/.mozilla/firefox/5cdatxx2.default-nightly/
erorrs
journalctl -p err -b
ls
cd
ls
nvim
nvim c.c
cd .config/
sl
ls
cd nvim
nvim
nvim c.c
cd
cd .config/
cd sway/
nvim config
poweroff
sudo pacman -S discord
sudo pacman -Syu
paru -Syu
nvim
cd .config/
cd vnvim
cd nvim
nvim
nvim
ls
nvim
nvim .config/foot/foot.ini
ls
cd .config/
nvim starship.toml
nvim fuzzel/fuzzel.ini
ls
lsl
btop
bvtop
btop
poweroff
ls
cd Downloads/
ls
python eduroam-linux-Ostfalia-Hochschule.py
nmcli
sway
cd Downloads/
ls
python eduroam-linux-Ostfalia-Hochschule.py
journalctl -p err -b
nmcli
nmcli device wifi connect eduroam
reboot
nmcli device wifi connect eduroam
python Downloads/eduroam-linux-Ostfalia-Hochschule.py
acpi
sudo pacman -Syu acpi
acpi
cd .config/
rg wez
+
nvim fuzzel/fuzzel.ini
rg wez
poweroff
nmcli
nmcli device wifi connect eduroam
nmcli device wifi connect WIFI@DB
ip addr
ip link
ip link -i
ip addr -a0
ip link -a
route -n
git clone https://github.com/Eliya-G/coffee-o-clock.git
ls
cd coffee-o-clock/
ls
python app.py
ls
cd coffee-o-clock/
ls
cat app.py
ls
mv coffee-o-clock/ dev/
ls
brightnessctl 
ls
cd misc/books/
ls
firefox-nightly computer-archi.pdf
cd bo
ls
firefox-nightly arm.pdf
paru -S google-chrome
poweroff
sudo pacman -Syu; paru  -Syu
ls
cd Downloads/
ls
firefox-nightly Wahl-der-Studienrichtung-Bachelor-Informatik-PO2010_13_18-_Version-2019-10-30.pdf
paru -S google-chrome
btop
poweroff
sudo pacman -Syu; paru  -Syu
poweroff
nmcli device wifi connect WIFI@DB
route -n
nmcli
poweroff
nmcli device wifi connect eduroam
cd Downloads/
ls
rm Wahl-der-Studienrichtung-Bachelor-Informatik-PO2010_13_18-_Version-2019-10-30.pdf eduroam-linux-Ostfalia-Hochschule.py
cd
cd .config/
rg xre
xremap --device /dev/input/event9 /home/wasd/.config/xremap/config.yml
sudo gpasswd -a wasd input<\n>echo 'KERNEL=="uinput", GROUP="input", TAG+="uaccess"' | sudo tee /etc/udev/rules.d/input.rules
echo 'KERNEL=="uinput", GROUP="input", TAG+="uaccess"' | sudo tee /etc/udev/rules.d/99-input.rules
cd .config/
cd
cd nvim
cd
cd .config/
nvim xremap/config.yml
reboot
xremap --device /dev/input/event9 /home/wasd/.config/xremap/config.yml
sudo xremap --device /dev/input/event9 /home/wasd/.config/xremap/config.yml
nvim .config/xremap/config.yml
cd
xremap .config/xremap/config.yml
nvim .config/xremap/config.yml
nvim .config/sway/config
sway
acpi
poweroff
sudo pacman -S thunderbird
poweroff
ls
nmcli device wifi connect eduroam
ls
acpi
sway
ls
cd .config/
ls
rm -rf wezterm/
rm -rf kitty/
ls
rm -rf hypr/
sudo pacman -S thunderbird
poweroff
nmcli device wifi rescan
nmcli device wifi list
cd Downloads/
ls
cd
cd bu
cd misc/books/
ls
cat books.sh
firefox-nightly  arm.pdf
cd phil/
s
ls
cd ..
ls
cd alg
ls
..
ls
lls
ls
firefox-nightly computer-archi.pdf
poweroff
nmcli device wifi list
cd boo
ls
acpi
poweroff
sudo pacman -Syu; paru  -Syu
poweroff
nmcli device wifi connect WIFI@DB
swaY
SWAY
nmcli device wifi connect WIFI@DB
route -n 
ls
cd .config/
ls
cd architect/
ls
cd dotfiles/
ls
cd config/
ls
rm -rf kitty/ 
ls
cp -r sway foot/ fuzzel/ ~/architect/dotfiles/config/
cd
sudo cp -r /etc/environment /etc/
sudo cp -r /etc/environment ~/architect/dotfiles/etc/
ls
sway
ls
cd config/
ls
cd
cd swa
ls
nvim config
sway
ls
cd swa
ls
nvim ocn
xremap .config/xremap/config.yml
groups wasd
lsmod | grep uinput
sudo nvim /etc/modules-load.d/uinput.conf
reboot
poweroff
nmcli device wifi connect eduroam
nvim
poweroff
nmcli device wifi connect eduroam
poweroff
nmcli device wifi connect WIFI@DB
poweroff
sudo pacman -Syu; paru  -Syu
ls
cd architect/
ls
nvim architect.sh
git checkout -cd
cd
git status
cd architect/
git status
cd .config/
nvim
ls
cd .config/
ls
rm -rf sway/ swayr/ swaylock/
ls
rm -rf micro/ alacritty/
ls
rm -rf wofi/
ls
sudo pacman -S fuzzel
l
cd .config/
cd
cd architect/
sl
ls
cat ssh.sh
cat later.sh
ls
cat later.sh
zoxide init nushell | save -f ~/.cache/.zoxide.nu<\n>mkdir ~/.cache/starship<\n>starship init nu | save -f ~/.cache/starship/init.nu
ls
cd
ls
cd .config/
ls
cd .config/
cd nushell/
ls
nvim env.nu
ls
cd .config/
cd nushell/
ls
nvim task.nu
ls
cd architect/
ls
nvim later.sh
ls
nvim ssh.sh
bash ssh.sh
cd /mnt/usb/
ls
cat firefox.sh
nvim firefox.sh
ls
bash firefox.sh
ls
cd
nvim
vnim
nvim
cd architect/
ls
cd dotfiles/
ls
cp user.js ~/.mozilla/firefox/xml0teu0.default-nightly/
btio
btoip
btop
poweroff
ls
cd
paru -S boosteroid
btop
ghostty
btop
nvim
cd /etc/
ls
cd udev/
ls
cat udev.conf
..
ls
cd NetworkManager/
ls
cat NetworkManager.conf
cd conf.d/
ls
..
...
ls
cd
ls
cd .config/
ls
cd .nvi
ls
cd nvim
ls
git add .
git commit -m ":^"
git push
cd
ls
cd
ls
rm -rf architect/
git clone git@github.com:ifelse023/architect.git
ls
cd architect/
ls
nvim packages.json
ls
cd .config/
ls
cd /etc/
ls
cd
ls
cd /mnt/usb/
ls
cd /boot/
ls
cd EFI/
ls
cd BOOT/
ls
...
ls
sudoedit limine.conf
sudo nvim limine.conf
cd
cd /etc/
ls
sudo pacman -S scx-scheds-git
cd /dev/
cd
cd /etc/
cd default/
ls
sudo nvim scx
ls
cd
cd /mnt/usb/
ls
cd Downloads/
cd
cd architect/
ls
cd architect/
ls
cd
ls
cd architect/
ls
cd dotfiles/
cp user.js ~/.mozilla/firefox/2utuwmom.default-nightly/
cd
ls
reboot
cd etc/
cd /etc/
cd default/
ls
nvim scx
scx_rusty --help
scx_rusty --help | rg perf
sudoedit scx
sudo pacman -S realtime-privileges
sudo gpasswd -a wasd realtime
cd
ls
cd /etc/
ls
cd udev/
ls
cat udev.conf
cd rules.d/
ls
cat 99-input.rules
sudoedit 99-input.rules
ls
..
ls
cd tmpfiles.d/
ls
cat optimize-interruptfreq.conf
ls
cat thp.conf
nvim thp-shrinker.conf
sudoedit thp-shrinker.conf
ls
sudoedit disable-zswap.conf
ls
ls /dev/zram*
cat /proc/swaps
cat /sys/block/zram0/disksize<\n>cat /sys/block/zram0/mem_used_total
cat /sys/module/zswap/parameters/enabled
ls
nvim coredump.conf
sudoedit coredump.conf
sl
ls
cd ..
ls
cd
journalctl -b -1
journalctl -b -p err
errors
limine
lsblk
mount | grep /boot
sudo limine bios-install /dev/nvme0n1
ls
cd /boot/
ls
cd EFI/
ls
cd BOOT/
ls
cat BOOTIA32.EFI
cd
ls
cd /
ls
sudo fd limine-bios.sys /
cd /usr/share/limine/
ls
sudo cp /usr/share/limine/limine.sys /boot/
ls
sudo cp /usr/share/limine/BOOTX64.EFI /boot/EFI/BOOT/
sudo cp /usr/share/limine/limine-bios.sys /boot/
cd
sudo mkinitcpio -P
reboot
ls
cd /etc/
ls
cd greetd/
ls
cat config.toml
:w
cd
sudo pacman -S greetd
systemctl enable greetd.service
cd .config/
cd hypr/
nvim
ls
nvim
nvi
nvim
cd
reboot
ls
uwsm start 
btop
cd .config/
ls
cd uwsm/
ls
nvim default-id
ls
cd
ls
xremap .config/xremap/config.yml
cd .config/
ls
cd
cd /etc/
sudoedit greetd/config.toml
reboot
cd dev/
nvim bug.sh
bash bug.sh
sudo bash bug.sh
sudo pacman -S inix
sudo pacman -S inxi
sudo bash bug.sh
ls
cat cachyos-bugreport.log
sudo bash bug.sh
nvim cachyos-bugreport.log
$(zgrep -iE 'CONFIG_(GENERIC_CPU(=| is)|X86_64_VERSION|MZEN|MBULLDOZER|MPILEDRIVER|MSTREAMROLLER|MEXCAVATOR|MBOBCAT|MJAGUAR|MK10|MK8SSE3|MATOM|MGOLDMONTPLUS|MSKYLAKE2|MIVYBRIDGE|MICELAKE|MNATIVE_INTEL|MNATIVE_AMD)' /proc/config.gz)
bash
ls
nvim kernel.sh
bash kernel.sh
paru -Rns nwg-look
ls
sudo pacman -S hyprutils
ls
cd Downloads/
ls
cd
ls
cd .config/
sudo pacman -S flameblast
sudo pacman -S flameshot
flameshow
flameshow guio
flameshow gui
flameshot gui
bash
nvim
btop
paru -S flameshot-git
pkill hyprland
pkill -9 hyprland
ls
cd .config/
nvim hypr/hyprland.conf
ls
cd hypr/
ls
cat keybindings.conf
cp -r ~/architect/dotfiles/config/hypr/keybindings.conf .
cd .config/
paru -S flameshot-git
nvim
ls
sudo pacman -S yazi
yazi
rm -rf architect/
git clone git@github.com:ifelse023/architect.git
cd architect/
ls
nvim packages.json
python architect/service_manager.py
mkdir /log
ls
mkdir log
ls
python architect/service_manager.py
cat log/service_manager.log
cd dotfiles/
cd etc/
ls
sudo cp /etc/greetd/ . 
sudo cp e /etc/greetd/ . 
sudo cp -r /etc/greetd/ . 
ls
cd
ls
errors
journalctl -b -p err
lsusb -t
lsusb -v
lsusb -t
journalctl -b -p err
lsusb -t
fastfetch
sudo pacman -S fastfetch
fastfetch
journalctl -b -p err
cd /etc/
nvim tlp.conf
sudo pacman -S acpid
acpid
cat /sys/class/power_supply/BAT0/capacity
systemctl status tlp.service
systemctl enable tlp
systemctl status tlp.service
journalctl -xe tlp
journalctl -xe /usr/bin/alsactl
journalctl -xe
journalctl -xe | rg error
journalctl -xe | rg fail
ls
cd
ls
poweroff
paru -Syu; sudo pacman -Syu
clipse -h
echo $env.EDITOR
cd .config/
echo $env.NU_PLUGIN_DIRS
ls
uswm app 
uwsm app
uwsm app start
uwsm app ghostty
uwsm app -- ghostty
time uwsm app -- ghostty
time ghostty
uwsm app -- ghostty
time uwsm app -- ghostty
sudo pacman -S discord
btop
nvim
fumon
uuctl
cd .config/
uwsm app -- /usr/lib/xdg-desktop-portal-hyprland
/usr/lib/xdg-desktop-portal-hyprland
dbus-update-activation-environment --all
nvim
btio
btop
ls
nvim
ls
cd dev/
git clone https://github.com/philj56/tofi.git
cd tofi/
ls
sudo pacman -S meson scdoc wayland-protocols --needed
sudo pacman -S freetype2 harfbuzz cairo pango wayland libxkbcommon --needed
s
ls
nvim meson.build
cat meson_options.txt
cat meson.build | wl-copy 
nvim meson.build
meson setup build<\n>ninja -C build install<\n>
ls
.//home/wasd/dev/tofi/share/bash-completion/completions/tofi-drun
./home/wasd/dev/tofi/share/bash-completion/completions/tofi-drun
cd build/
ls
cd bin/
ls
cd bin/
ls
nvim .cache/.zoxide.nu
cd bin/
ls
cd dev/tofi/
ls
cd dev/tofi/
ls
cd bin/
sl
ls
./tofi-drun
..
ls
..
ls
cd src/
ls
nvim main.c
....
ls
rm -rf dev/tofi/
ls
paru -S zig-nightly-bin zls-nightly-bin
xremap .config/xremap/config.yml
ls -l $XDG_RUNTIME_DIR/hypr/.hyprland_socket
hyprctl monitors
bash
ls
bash
ls -ld $env.XDG_RUNTIME_DIR/hypr
ls -ld $env.XDG_RUNTIME_DIR
cd /run/user/1000/hype
cd /run/user/1000/hypr
ls
la
ls 882f7ad7d2bbfc7440d0ccaef93b1cdd78e8e3ff_1739126262_795880997/
ls -a 882f7ad7d2bbfc7440d0ccaef93b1cdd78e8e3ff_1739126262_795880997/
echo $env.HYPRLAND_INSTANCE_SIGNATURE
cd
xremap .config/xremap/config.yml
cat /cargo/registry/src/index.crates.io-6f17d22bba15001f/hyprland-0.3.13/src/data/regular.rs
ls
xremap .config/xremap/config.yml
HYPRLAND_SOCKET=/run/user/1000/hypr/882f7ad7d2bbfc7440d0ccaef93b1cdd78e8e3ff_1739126262_795880997/.socket.sock xremap config.yml
HYPRLAND_SOCKET=/run/user/1000/hypr/882f7ad7d2bbfc7440d0ccaef93b1cdd78e8e3ff_1739126262_795880997/.socket.sock xremap .config/xremap/config.yml
journalctl -xe | grep hyprland
hyprctl
xremap .config/xremap/config.yml
cd /cargo/
cd .config/
cd sway/
ls
cat config
xremap .config/xremap/config.yml
paru -Rns xremap-hypr-bin
cargo install xremap --features hypr
xremap .config/xremap/config.yml
cd .config/
cd
cd .cargo/
ls
cd bin/
ls
la
./xremap
./xremap .config/xremap/config.yml
./xremap ~/.config/xremap/config.yml
cargo remove xremap --features hypr
cargo remove xremap
cd
cargo uninstall xremap
paru -S xremap-hypr-bin
sudo xremap .config/xremap/config.yml
paru -S hyprland-git
paru -S aquamarine-git  hyprland-git
sudo pacman -R aquamarine 
sudo pacman -R hyprland aquamarine 
paru -S hyprland-git
sudo pacman -R hyprgraphics?
sudo pacman -R hyprgraphics
sudo pacman -R  hyprpaper hyprgraphics
paru -S hyprland-git hyprpaper-git
sudo pacman -R hyprland-qtutils
paru -S hyprland-git hyprpaper-git
paru -S hyprland-git
paru -S hyprland-git hyprpaper-git
sudo pacman -S hyprland hyprpaper
ls
hyprland
sudo pacman -S hyprland hyprpaper
Hyprland
sudo pacman -S hyprgraphics
sudo pacman -Rns hyprland
sudo pacman -S hyprland
Hyprland
sudo pacman -S sway
btop
btop --utf-force
ls
cd dev/
zig init-exe hey
ls
zig 
zig init
ls
cd src/
ls
nvim main.zig
zig run
l
ls
..
zig run
ls
zig build
zig run
zig build run
zig build test
ls
./zig-out/bin/dev
nvim
zig build test
sudo pacman -S keyd
cd
cd .cargo/
cd
cd .config/
ls
cat xremap/
cat xremap/config.yml
keyd-application-mapper
mkdir -p ~/.config/keyd/
cd .config/
ls
cd
cd .config/
mkdir keyd
cd keyd/
ls
cd .cache/
ls
rm -rf .zoxide.nu
cd
cd architect/
ls
bash nu-settings.nu
cat nu-settings.nu
zoxide init nushell | save -f ~/.cache/.zoxide.nu
nvim .cache/.zoxide.nu
nvim ~/.config/keyd/app.conf
usermod -aG keyd wasd
sudo usermod -aG keyd wasd
keyd-application-mapper
sway
ls
keyd-application-mapper
keyd-application-mapper -d
ls
keyd-application-mapper
1nvim
nvim
neovide
sudo pacman -S neovide
vim
systemctl enable keyd
sudo pacman -Rns hyprland 
sudo pacman -Rns hyprland-share-picker 
paru -Rns hyprlang-git
paru -Rnshyprpaper hyprlang-git
paru -Rns hyprpaper hyprlang-git
paru -Rns hyprlang hyprpaper hyprlang-git
sudo pacman -Rns hyprlang
sudo pacman -Rns xdg-desktop-portal-hyprland
ls
paru -Rns  hyprlang-git
sudo pacman -Rns hyprpaper 
paru -Rns  hyprlang-git
ls
cd architect/
ls
nvim packages.json
ls
python architect/install_packages.py
nvim packages.json
python architect/install_packages.py
ls
sudo pacman -Rns sway
keyd-application-mapper
Hyprland
sudo pacman -S sway
keyd-application-mapper
systemctl stop keyd
keyd-application-mapper
systemctl status keyd
keyd-application-mapper
paru -S xremap-wlroots-bin
paru -R xremap-hypr-bin
paru -S xremap-wlroots-bin
sway
sudo pacman -S swaybg swayr
sudo pacman -S swaybg 
sudo pacman -Rns hyprland 
sudo pacman -S xorg-xwayland
cd
paru -S swayr
nvim .cache/.zoxide.nu
ls
sway
cd
ls
cd s
ls
cd dev/src/
d
cd
cd src
nvim .cache/.zoxide.nu
cd src
ls
cd architect/
ls
cd
ls
cd architect/
ls
journalctl -b -p err
ls
uwsm
uwsm -h
uwsm start -h
uwsm start -D
uwsm start 
uwsm start n
uwsm start -n
sudoedit /etc/greetd/config.toml
cd /etc/
sudo rg hypr
sudo rg sway
cd
ls
cd .cache/
cd
rg hypr
cd .config/
rg hypr
nvim uwsm/
ls
cd
btop
btop --utf-force
cd .config/
nvim uwsm/default-id
nvim /etc/greetd/config.toml
sudoedit /etc/greetd/config.toml
reboot
uwsm -h
uwsm check
uwsm check -h
uwsm check is-active
uwsm check is-active -h
uwsm check is-active sway
uwsm check is-active sway.desktop
uwsm check is-active sway -v
ls
cd
cd .config/
nvim
ls
sudoedit /etc/greetd/config.toml
cd
reboot
ls
cd /etc/
sudoedit /etc/greetd/config.toml
reboot
ls
bto
btop
uwsm select
cd /etc/
ls
cd
cd .config/
ls
cd .config/
nvim /etc/greetd/config.toml
uwsm start -h
sudoedit /etc/greetd/config.toml
sudo pacman -S sway
sudo pacman -R hyprpaper 
sudo pacman -S hyprcursor-util 
uwsm start -h
cd /usr/share/wayland-sessions/
ls
cat sway.desktop
sudoedit /etc/greetd/config.toml
ls
Hyprland
systemctl
cd .config/
nvim nushell/
btop
cd .config/
cd fuzzel/
ls
nvim fuzzel.ini
uwsm app -- brightnessctl set 10%-
nvim sway/config
ls
nvi
nvim
cd .config/
cd sway/config.d/*
cd sway/config.d
cd /etc/sway/config.d
ls
cat 50-systemd-user.conf
nvim sway/config
ls
sudoedit /etc/greetd/config.toml
ls
cd
ls
echo $env.SWAYSOCK
echo $env.DISPLAY
cat /etc/sway/config.d/50-systemd-user.conf
echo $env.XDG_CURRENT_DESKTOP
bash
uwsm finalize
uwsm check is-active sway -v
uwsm select
sway
uwsm start default
systemctl --user status wayland-wm@sway.desktop.service
journalctl --user -xeu wayland-wm@sway.desktop.service
sudoedit /etc/greetd/config.toml
ls
cd .config/
nvim sway/config
reboot
uwsm check is-active sway -v
echo $env.XDG_CURRENT_DESKTOP
journalctl --user -xeu wayland-wm@sway.desktop.service
echo $env.XCURSOR_THEME
ls
nvim
cd architect/
sudoedit /etc/greetd/config.toml
ls
cd dotfiles/
ls
sudo cp -r /etc/greetd/config.toml etc/
cd etc
ls
cat greetd/config.toml
rm greetd/config.toml.pacnew
ls
cat config.toml
cat greetd/config.toml
rm greetd/config.toml
ls
cat config.toml
mv config.toml greetd/
ls
..
ls
cd config/
ls
cd /mnt/usb/
ks
ls
bash firefox.sh
ls
cd
ls
cd architect/
ls
cp dotfiles/user.js ~/.mozilla/firefox/dydxbun2.default-nightly/
ls
cd
ls
nvim
ls
poweroff
cd .config/
ls
cd /etc/sway/config.d
...
sudoedit /etc/greetd/config.toml
nvim uwsm/default-id
ls
systemctl enable greetd.service
uwsm check is-active sway -v
uwsm 
uwsm -h
uwsm start default
nvim
paru -S zig-nightly-bin zls-nightly-bin
sudo pacman -S picotool
sudo pacman -S picotools
ls
cd .cache/
ls
nvim .cache/.zoxide.nu
cd
nvim .cache/.zoxide.nu
ls
cd .cache/
cd
cd .config/
ls
cd .config/
ls
cd
ls
sudo mount /dev/sda1 /mnt/usb/
mv user_configuration.json user_credentials.json /mnt/usb/
sudo mv user_configuration.json user_credentials.json /mnt/usb/
cd
sudo umount /mnt/usb
ls
cd
ls
cd .config/
ls
cd nushell/
ls
cd .config/
ls
dc
cd .c
ls
cd
cd .cache
ls
nvim .zoxide.nu
cd
ls
cd nu
ls
nvim config
cat .cache/.zoxide.nu
cat .cache/.zoxide.nu | wl-copy 
ls
ls
zoxide_
nvim .cache/.zoxide.nu
ls
cd /
nvim config.nu
nvim .config/nushell/config.nu
cd .cache
cd
cd .config/
cd nu
ls
dc 
cd nu
ls
paru -S carapac-bin
paru -S carapace-bin
ls
sudo pacman -R fish-git 
ls
fish
cd
ls
cd .config/
ls
rm -rf fish/
ls
sudo pacman -S fish-git
ls
picotool
picotools
paru -S picotool
ls
cd .config/
l
ls_colors
ls
cd /home/wasd/.config/nushell
ls
cat ls_colors.txt 
ls
nvim config.nu 
ls
picotool 
man picotoolERR
nvim catppuccin_macchiato.nu
cd /home/wasd/.config/nushell
ls
nvim catppuccin_macchiato.nu
ls
mv catppuccin_macchiato.nu catppuccin_mocha.nu
ls
ls -a
ls
cd /home/wasd/.config/nushell
ls
rm ls_colors.txt
cd
ls
cd .config/
ls
cd /home/wasd/.config/nushell
ls
cat login.nu 
rm login.nu
ls
cat catppuccin_mocha.nu 
rg scheme
rg color
sudo pacman -S vivid
ls
cd /home/wasd/.config/nushell
ls
nvim
vivid
ls
vivid generate catppuccin-mocha > ~/.config/nushell/ls_colors.txt
bash
ls
cd
ls
cd /home/wasd/.config/nushell
ls
cat ls_colors.txt 
ls
nvim history.txt
ls
cd /home/wasd/.config/nushell
ls
cat ls_colors.txt 
nvim config.nu
nvim env.nu
ls
sudo pacman -Rns vivid
cd
ls
rm -rf architect/
git clone git@github.com:ifelse023/architect.git
cd architect/
pacman -Qq
pacman -Q
pacman -Q | sdk
pacman -Q | rg sdk
ls
cd architect/
nvim packages.json
ls
cat nu-settings.nu 
ls
cd
cd /home/wasd/.config/nushell
ls
cat task.nu 
ls
rm task.nu
nvim 
cd /home/wasd/.config/nushell
ls
mkdir theme
mv catppuccin_mocha.nu ls_colors.txt theme/
ls
nvim
ls
cd architect/dotfiles/config
cat nushell/config.nu
ls
greet 
greet as
greet asas
greet "asas"
greet 1asas
greet 1
copycat 
ls
la
cpcat .gitconfig
la
cpcat .gitconfig
nun
cpcat .gitconfig
nvim config.nu 
ls
cpcat .gitconfig
ls
cpcat .gitconfig
ls
cat nushell/config.nu
cat .config/nushell/alias.nu 
cat architect/architect/create_symlinks.py 
somename 
somename journalctl
somename journalctl asd
journalctl
ls
somename journalctl asd
ls
somename journalctl asd
somename journalctl
somename journalctl as
somename journalctl a
somename journalctl
anu
somename journalctl
journalctl | system
journalctl | rg system
somename journalctl
somename journalctl systm
somename journalctl syst
somename journalctl system
somename journalctl fail
journalctl -b | rg system
somename journalctl -b fail
exec_grep 
exec_grep journalctl
exec_grep journalctl -b 
exec_grep journalctl -b asd
exec_grep "journalctl -b" asd
exec_grep "journalctl -b" "asd"
exec_grep "ls -la" ".txt"  
exec_grep "journalctl -b -p err" "err"  
journalctl -b -p err | rg err
exec_grep "journalctl -b -p err" err
bash -c "journalctl "
exec_grep "journalctl -b -p err" err
bash -c "journalctl "
exec_grep "journalctl -b -p err" err
filter_rg journaldctl
filter_rg journaldctl err
filter_rg "journaldctl" err
filter_rg "journaldctl" "err"
filter_rg journalctl err
filter_rg journalctl -b err
filter_rg "journalctl -b" err
ls
nvim functions.nu
ls
cd
ls
cat a.out 
sl
ll
ls
rm a.out
ls
nvim
ls
cd .config/
cd /home/wasd/architect
ls
cd architet
ls
cd architect
ls
cat manage_directories.py 
ls
cd /home/wasd/architect/architect
ls
cd
nvim starship.toml 
ls
cd /home/wasd/.config/nushell
nvim starship.toml 
ls
cd /home/wasd/.config
cd /home/wasd/dev
cd
nvim
ls
cd
ls
cp architect/ dotfiles
ls
cd dotfiles
ls
cd
cd /home/wasd/dotfiles
ls
cat pyproject.toml 
ls
cd /home/wasd/.config/nushell
ls
nvim config.nu 
ls
cd /home/wasd/misc
ls
mkdir theme
rm -rf theme/
ls
cd
ls
cd /home/wasd/dev
ls
cd
ls
cd .config/
nvim nushell/config.nu 
ls
cd
sl
ls
cd /home/wasd/dotfiles
ls
mv dotfiles/ config
ls
cat pyproject.toml 
sudo pacman -S chezmoi
chezmoi doctor 
la
rm -rf .git/
ls
chezmoi init
ls
la
ls
chezmoi init
ls
la
chezmoi add ~/.config/sway/
cd .local
ls
cd share
ls
cd chezmai
ls
cd chezmoi
ls
cd dot_config
ls
cd sway
ls
cd
chezmoi edit
ls
chezmoi edit
chezmoi add ~/.config/ghostty
ls
chezmoi edit
chezmoi -v apply
ls
chezmoi edit
chezmoi -v apply
ls
cd
ls
cd /home/wasd/dotfiles
ls
cd
cd /home/wasd/.local/share/chezmoi/dot_config
ls
ll
ls -a
ls
ll
ls --full-paths 
ls --all 
find . -type l -ls
readlink -f 
readlink
ls | where type == symlink
cd /etc
ls | where type == symlink
cd .config/
ls | where type == symlink
..
ls | where type == symlink
cd asets
ls
cd assets
ls
cat assets/
cd assets/
ls
cd
ls
la
ll
cd /home/wasd/.local/share/chezmoi/dot_config/sway
ls
ll
ls | where type == symlink
..
chezmoi status
chezmoi edit ghostty/config
cd
chezmoi edit ghostty/config
chezmoi edit 
chezmoi edit ghostty
ls
btop
ls
btop
ls
btop
ls
btop
watch sensors
sensors
ls
btop
chezmoi add ~/.config/ghostty/config
chezmoi edit ghostty/config
chezmoi edit ghostty/
chezmoi edit ghostty
chezmoi edit 
ls
cd /home/wasd/.local/share/chezmoi
ls
cd dot_config
btop
git commit -m "first commit"
git add .
git commit -m "first commit"
git status
git remote add origin git@github.com:ifelse023/dotfiles.git
git status
git push -u origin main
chezmoi diff
btop
ls
chezmoi edit ghostty
chezmoi edit ghostty/
chezmoi edit ghostty/config
chezmoi edit dot_config
chezmoi edit dot_config/
chezmoi edit dot_config/ghostty
chezmoi apply
chezmoi help
chezmoi managed
chezmoi .config/sway/config
chezmoi edit .config/sway/config
chezmoi managed
chezmoi edit .config/sway/config
cd
chezmoi edit .config/sway/config
chezmoi edit .config/ghostty/config
chezmoi apply
ls
ls
chezmoi edit .config/ghostty/config
chezmoi apply
ls
chezmoi edit .config/ghostty/config
ls
chezmoi -v apply
ls
ls
cd /home/wasd/dotfiles
ls
cd
ls
chezmoi edit --apply ~/.config/ghostty/config
ls
ls
ghostty +show-config 
chezmoi edit --apply ~/.config/ghostty/config
ls
cd /home/wasd/dotfiles
ls
git init # initialize repository if needed
git submodule add https://github.com/anishathalye/dotbot
git config -f .gitmodules submodule.dotbot.ignore dirty # ignore dirty commits in the submodule
cp dotbot/tools/git-submodule/install .
touch install.conf.yaml
ls
cd install
ls
cat install 
git diff
git status
z .bashrc
cd /home/wasd/.config/nushell
ls
nvim alias.nu 
cd
d .local/
d .cargo/
cd
cd /home/wasd/dev
ls
mkdir theme
d theme/
ls
..
ls
rm -rf theme/
ls
cd
ls
rm -rf dotfiles/
cd /home/wasd/architect
ls
d architect/
ls
..
d dotfiles/
ls
d config/
ls
cp ~/.config/nushell .
ls
d nushell/
ls
rm task.nu ls_colors.txt login.nu
ls
cd
ls
cp architect/ dotfiles
ls
cd /home/wasd/dotfiles
ls
cd ~/.dotfiles # replace with the path to your dotfiles<\n>git init # initialize repository if needed<\n>git submodule add https://github.com/anishathalye/dotbot<\n>git config -f .gitmodules submodule.dotbot.ignore dirty # ignore dirty commits in the submodule<\n>cp dotbot/tools/git-submodule/install .<\n>touch install.conf.yaml
ls
rm -rf .git/
ls
..
rm -rf dotfiles/
cp architect/ dotfiles
cd /home/wasd/dotfiles
ls
rm -rf .git/
<\n>git init # initialize repository if needed<\n>git submodule add https://github.com/anishathalye/dotbot<\n>git config -f .gitmodules submodule.dotbot.ignore dirty # ignore dirty commits in the submodule<\n>cp dotbot/tools/git-submodule/install .<\n>touch install.conf.yaml
ls
nvim install.conf.yaml 
ls
./install
ls
d downloads/
ls
..
ls
ll
ls
rm downloads/
ls
cd
sl
ls
chezoi add 
chezmoi add ~/.config/fish/
chezmoi edit --apply .config/fish/config.fish
ls
chezmoi 
chezmoi destroy .config/fish/
chezmoi add ~/.config/fish/
fish
chezmoi add ~/.config/fish/
chezmoi destroy .config/fish/
ls
cd .config/
ls
cd fish
fish
ls
cd
ls
chemoi
chezmoi 
chezmoi add ~/.config/fish/
chezmoi forget  ~/.config/fish/
chezmoi edit
cd
ls
cd dev/src/
..
ls
cd
cd dev
ls
git clone https://www.github.com/ifelse023/dotfiles.git
ls
d dotfiles/
ls
d dot_config/
ls
d ghostty/
ls
cat config 
...
ls
..
ls
rm dotfiles/
rm -r dotfiles/
ls
cd
ls
chezmoi unmanaged
chezmoi edit
nvim
ls
nvim
btop
cd
ls
rm -rf dotfiles/
ls
cd architect
ls
nvim
ls
cd
ls
chezmoi add /etc/greetd/
cd /home/wasd/.config/nushell
ls
btop
ls
btop
cat .bashrc 
cd /home/wasd/architect
cd architect
ls
cat install_packages.py 
ls
cd .config/
cat .ripgreprc 
nvim
cd
poweroff
ls
lls
ls
nvim
ls
d dot_config/
ls
..
la
ls
la
ls
cd
