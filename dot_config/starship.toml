"$schema" = 'https://starship.rs/config-schema.json'

format = """
$directory\
$git_branch\
$git_status\
$c\
$haskell\
$rust\
$python\n\
$character \
"""

# Use the Catppuccin Mocha palette.
palette = "catppuccin_mocha"

[palettes.catppuccin_mocha]
rosewater = "#f5e0dc"
flamingo = "#f2cdcd"
pink = "#f5c2e7"
mauve = "#cba6f7"
red = "#f38ba8"
maroon = "#eba0ac"
peach = "#fab387"
yellow = "#f9e2af"
green = "#a6e3a1"
teal = "#94e2d5"
sky = "#89dceb"
sapphire = "#74c7ec"
blue = "#89b4fa"
lavender = "#b4befe"
text = "#cdd6f4"
subtext1 = "#bac2de"
subtext0 = "#a6adc8"
overlay2 = "#9399b2"
overlay1 = "#7f849c"
overlay0 = "#6c7086"
surface2 = "#585b70"
surface1 = "#45475a"
surface0 = "#313244"
base = "#1e1e2e"
mantle = "#181825"
crust = "#11111b"


[os]
# Arch logo colored with green.
format = '[](bold green) '
disabled = false

[os.symbols]
Arch = ''

[character]
# Success: Mauve checkmark, Green prompt symbol.
# Error: Red prompt symbol.
success_symbol = "[ ](mauve) [󰘧](green)"
error_symbol = "[ ❯](red)"

[directory]
# Use `surface0` for the background and `blue` for the path text.
# `blue` provides a clear, neutral indicator for general information like a path.
style = "bg:surface0 fg:blue"
truncation_length = 5
truncation_symbol = "…/"
home_symbol = '󰋜 '
read_only = '  '

[directory.substitutions]
Downloads = " "
books = " "
embedded = " "
architect = "󰣇 "
test = '󰙨 '

[git_branch]
# Use `teal` for the branch name, a calm color for info.
style = "bg:surface0 fg:teal"
symbol = ""

[git_status]
# The base style for the git status segment is red, indicating "danger" if unstaged changes exist.
style = "bg:surface0 fg:red"
# Use `green` for states that are "good" or "complete".
up_to_date = '[ ✓ ](bg:surface0 fg:green)'
staged = '[++\($count\)](bg:surface0 fg:green)'
# Use `yellow` for states that require attention.
untracked = '[?\($count\)](bg:surface0 fg:yellow)'
modified = '[!\($count\)](bg:surface0 fg:yellow)'
# Use distinct colors for other states.
stashed = '[\$](bg:surface0 fg:mauve)'
renamed = '[»\($count\)](bg:surface0 fg:blue)'
deleted = '[✘\($count\)](style)'                                                                                                                         # Inherits the `red` fg from the parent style.
ahead = '[⇡\(${count}\)](bg:surface0 fg:sky)'
behind = '[⇣\(${count}\)](bg:surface0 fg:maroon)'
diverged = '⇕[\[](bg:surface0 fg:mauve)[⇡\(${ahead_count}\)](bg:surface0 fg:sky)[⇣\(${behind_count}\)](bg:surface0 fg:maroon)[\]](bg:surface0 fg:mauve)'

# Assign colors to language modules based on common associations.
[c]
# Blue is often associated with C/C++.
style = "bg:surface0 fg:blue"
detect_files = ["CMakeLists.txt", "compile_commands.json"]
symbol = " "

[haskell]
# Mauve for functional languages.
style = "bg:surface0 fg:mauve"
symbol = " "

[rust]
# Peach (orange) is the official color for Rust.
style = "bg:surface0 fg:peach"
symbol = " "

[python]
# Yellow is strongly associated with Python.
style = "bg:surface0 fg:yellow"
symbol = ' '
