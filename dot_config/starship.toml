# A Starship theme using the "dream" palette.

palette = "dream"

add_newline = false
command_timeout = 1000

# The order of modules here defines the order they appear in the prompt.
# A newline character (\n) is used before the `character` module to create a two-line prompt.
format = """$os$directory$git_branch$git_status$package$c$lua$zig$python$rust$nix_shell
$character"""

# Defines the "dream" color palette.
[palettes.dream]
bg = "#16181a"
bg_alt = "#1e2124"
bg_highlight = "#3c4048"
fg = "#ffffff"
grey = "#7b8496"
blue = "#5ea1ff"
green = "#5eff6c"
cyan = "#5ef1ff"
red = "#ff6e5e"
yellow = "#f1ff5e"
magenta = "#ff5ef1"
pink = "#ff5ea0"
orange = "#ffbd5e"
purple = "#bd5eff"

[os]
format = '[󰣇](bold blue) '
disabled = false

[os.symbols]
Arch = '󰣇'

[character]
success_symbol = "[󰋕](green) [❯](cyan)"
error_symbol = "[󰋕 ❯](red)"
format = "$symbol "

[directory]
truncation_length = 5
truncation_symbol = '…/'
home_symbol = '󰋜 ~'
read_only = '  '
format = '[@]($bold fg) [$path]($style)[$read_only]($read_only_style) '
style = "bold fg"
read_only_style = "red"

[git_branch]
symbol = ''
format = '[on](text) [$symbol $branch]($style) '
style = 'bold green'

[git_status]
format = '([$all_status$ahead_behind]($style)) '
style = 'bold green'
conflicted = '[🏳](red)'
# Changed 'peach' to 'orange' from the new palette.
untracked = '[?](orange)'
ahead = '[⇡${count}](green)'
behind = '[⇣${count}](green)'
diverged = '[⇕⇡${ahead_count}⇣${behind_count}](red)'
stashed = '[](pink)'
modified = '[](yellow)'
staged = '[+](green)'
# Changed 'peach' to 'orange' from the new palette.
renamed = '[»](orange)'
deleted = '[-](red)'

[c]
# Changed 'teal' to 'cyan' as it is the closest equivalent in the new palette.
style = "bold cyan"
detect_files = ["CMakeLists.txt", "compile_commands.json"]

[hg_branch]
symbol = " "

[memory_usage]
symbol = " "

[nix_shell]
impure_msg = '[impure shell](bold red)'
pure_msg = '[pure shell](bold green)'
unknown_msg = '[unknown shell](bold yellow)'
format = 'via [ $state( \($name\))](bold blue) '

[package]
symbol = " "

[python]
symbol = " "
format = 'via [${symbol}python (${version} )(\($virtualenv\) )]($style)'
style = "bold yellow"
pyenv_prefix = "venv "
python_binary = ["./venv/bin/python", "python", "python3", "python2"]
detect_extensions = ["py"]
version_format = "v${raw}"

[rust]
symbol = " "
